<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Yempo</title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
	
	<style>
        .button {
            background: white;
            border-radius: 100px;
            border-color: black;
            border-width: medium;
            color: black;
            font-size: 31px;
            padding: 5px 20px 5px 20px;
            text-decoration: none;
        }

    </style>
	
	<!-- Jquery core -->
	<script type="text/javascript" src="vendor/jquery/jquery.min.js"></script>
	
	<!-- D3 core -->
	<script type="text/javascript" src="vendor/d3/d3.min.js"></script>

    <!-- Custom fonts for this template -->
    <link href="vendor/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic" rel="stylesheet" type="text/css">

    <!-- Plugin CSS -->
    <link href="vendor/magnific-popup/magnific-popup.css" rel="stylesheet" type="text/css">

    <!-- Custom styles for this template -->
    <link href="css/freelancer.min.css" rel="stylesheet">
	
	<script>
        var friendsInYourArea = [];
        var acquaintancesInYourArea = [];
        var bridgesInYourArea = [];
	
	$(function(){
	$.ajax({
		type: 'GET',
		url: '/api/filters/mostfollowers',
		success: function(data){
		var followers = JSON.parse(data);
		
		var acquaintances = followers.map(a => a.screen_name);
		var bridges = followers.map(a => a.mutual_connection);
		
		var friends = [];
    
    var angle = 360/ (friends.length + acquaintances.length);

    var canvas = d3.select("#mostFollowers")
        .append("svg")
        .attr("width", 360)
        .attr("height", 460);//change to dynamic

    var myCx = 360/2;
    var myCy = 460/2;
    var rValue = 20;

    var rValue1 = 75;
    var rValue2 = 150;

    var friendsLines = canvas.selectAll("lines")
        .data(friends)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCx + Math.cos(i * Math.PI * angle / 180) * rValue1;
        })
        .attr("y1", function (d, i) {
            return myCy + Math.sin(i * Math.PI * angle / 180) * rValue1;
        })
        .attr("x2", myCx)
        .attr("y2", myCy)
        .attr("stroke-width", 1)
        .attr("stroke", "black");

    var bridgeDashes = canvas.selectAll("lines")
        .data(bridges)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCx + Math.cos((friends.length + i) * Math.PI * angle / 180) * rValue1;
        })
        .attr("y1", function (d, i) {
            return myCy + Math.sin((friends.length + i) * Math.PI * angle / 180) * rValue1;
        })
        .attr("x2", myCx)
        .attr("y2", myCy)
        .style("stroke-dasharray", "5 5")
        .attr("stroke", "black");

    var bridgeToAcquaintancesDashes = canvas.selectAll("lines")
        .data(bridges)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCx + Math.cos((friends.length + i) * Math.PI * angle / 180) * rValue1;
        })
        .attr("y1", function (d, i) {
            return myCy + Math.sin((friends.length + i) * Math.PI * angle / 180) * rValue1;
        })
        .attr("x2", function (d, i) {
            return myCx + Math.cos((friends.length + i) * Math.PI * angle / 180) * rValue2;
        })
        .attr("y2", function (d, i) {
            return myCy + Math.sin((friends.length + i) * Math.PI * angle / 180) * rValue2;
        })
        .style("stroke-dasharray", "5 5")
        .attr("stroke", "black");

    var circle = canvas.append("circle")
        .attr("cx", myCx)
        .attr("cy", myCy)
        .attr("r", rValue)
        .style("fill", "black");

    canvas.append("text")
        .text("you")
        .attr("x", myCx - 15)
        .attr("y", myCy)
        .style('fill', 'white');

    var friendsPetals = canvas.selectAll("circles")
        .data(friends)
        .enter()
        .append("circle")
        .attr("cx", function (d, i){
            return myCx + Math.cos(i * Math.PI * angle / 180) * rValue1;
        })
        .attr("cy", function (d, i) {
            return myCy + Math.sin(i * Math.PI * angle / 180) * rValue1;
        })
        .attr("r", rValue)
        .style("fill", "red");
		
	var friendsPetalsText = canvas.selectAll("circles")
        .data(friends)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCx + Math.cos(i * Math.PI * angle / 180) * rValue1;
        })
        .attr("y", function (d, i) {
            return myCy + Math.sin(i * Math.PI * angle / 180) * rValue1;
        })
        .style("fill", "black");

    var acquaintancesPetals = canvas.selectAll("circles")
        .data(acquaintances)
        .enter()
        .append("circle")
        .attr("cx", function (d, i) {
            return myCx + Math.cos((friends.length + i) * Math.PI * angle / 180) * rValue2;

        })
        .attr("cy", function (d, i) {
            return myCy + Math.sin((friends.length + i) * Math.PI * angle / 180) * rValue2;
        })
        .attr("r", rValue)
        .style("fill", "red")
		.on('click', toggleColor("red"));
		
	var acquaintancesPetalsText = canvas.selectAll("circles")
        .data(acquaintances)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCx + Math.cos((friends.length + i) * Math.PI * angle / 180) * rValue2;
        })
        .attr("y", function (d, i) {
            return myCy + Math.sin((friends.length + i) * Math.PI * angle / 180) * rValue2;
        })
        .style("fill", "black");


    var bridgesPetals = canvas.selectAll("circles")
        .data(bridges)
        .enter()
        .append("circle")
        .attr("cx", function (d, i) {
            return myCx + Math.cos((friends.length + i) * Math.PI * angle / 180) * rValue1;

        })
        .attr("cy", function (d, i) {
            return myCy + Math.sin((friends.length + i) * Math.PI * angle / 180) * rValue1;
        })
        .attr("r", rValue)
        .style("fill", "gray");
		
	var bridgesPetalsText = canvas.selectAll("circles")
        .data(bridges)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCx + Math.cos((friends.length + i) * Math.PI * angle / 180) * rValue1;
        })
        .attr("y", function (d, i) {
            return myCy + Math.sin((friends.length + i) * Math.PI * angle / 180) * rValue1;
        })
        .style("fill", "black");
		
		}});
		});
	
	</script>
	
  </head>

  <body id="page-top">

    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg bg-secondary fixed-top text-uppercase" id="mainNav">
      <div class="container">
        <a class="navbar-brand js-scroll-trigger" href="/profile">Yempo</a>
        <button class="navbar-toggler navbar-toggler-right text-uppercase bg-primary text-white rounded" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
          Menu
          <i class="fa fa-bars"></i>
        </button>
        <div class="collapse navbar-collapse" id="navbarResponsive">
          <ul class="navbar-nav ml-auto">
            <li class="nav-item mx-0 mx-lg-1">
              <a class="nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger" href="/filters">Filters</a>
            </li>
            <li class="nav-item mx-0 mx-lg-1">
              <a class="nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger" href="/feed">Feed</a>
            </li>
            <li class="nav-item mx-0 mx-lg-1">
              <a class="nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger" href="/analytics">Analytics</a>
            </li>
			<li class="nav-item mx-0 mx-lg-1">
              <a class="nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger" href="/logout">Logout</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
  
    <!-- Header -->
    <header class="masthead bg-primary text-white text-center">
      <div class="container">
	  <h1 class="text-uppercase mb-0">filters</h1>
	  <h2 class="font-weight-light mb-0">Swipe to view filters</h2>
      </div>
    </header>
	
	<section id="contact">
	
	<div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
	  <div class="carousel-inner">
		<div class="carousel-item">
		  <div class="container">
			<h2 class="text-center text-uppercase text-secondary mb-0">Gateway to Outside Network</h2>
			<div class="row">
			  <div class="col-lg-8 mx-auto">
				<div class="row justify-content-center">
					<div id = "gatewayToOutside"> </div>
				</div>
			  </div>
			</div>
			
			<div class="row">
			<div class ="col-1"><p> </p></div>
			<div class="col-4">
				<button class="button">+</button>
			</div>
			<div class="col-7">
				<p>Select a petal to add a person to your dandelion</p>
			</div>

			</div>
		  </div>
		</div>
		
		<div class="carousel-item active">
		  <div class="container">
			<h2 class="text-center text-uppercase text-secondary mb-0">Most Followers</h2>
			<div class="row">
			  <div class="col-lg-8 mx-auto">
				<div class="row justify-content-center">
				  <div id = "mostFollowers"> </div>
				 </div>
			  </div>
			</div>
			
			<div class="row">
			<div class ="col-1"><p> </p></div>
			<div class="col-4">
				<button class="button">+</button>
			</div>
			<div class="col-7">
				<p>Select a petal to add a person to your dandelion</p>
			</div>

			</div>
		  </div>
		</div>
		
		<div class="carousel-item">
		  <div class="container">
			<h2 class="text-center text-uppercase text-secondary mb-0">Least Followers</h2>
			<div class="row">
			  <div class="col-lg-8 mx-auto">
				<div class="row justify-content-center">
				  <div id = "leastFollowers"> </div>
				 </div>
			  </div>
			</div>
			
			<div class="row">
			<div class ="col-1"><p> </p></div>
			<div class="col-4">
				<button class="button">+</button>
			</div>
			<div class="col-7">
				<p>Select a petal to add a person to your dandelion</p>
			</div>

			</div>
		  </div>
		</div>
		
		<div class="carousel-item">
		  <div class="container">
			<h2 class="text-center text-uppercase text-secondary mb-0">Most Active</h2>
			<div class="row">
			  <div class="col-lg-8 mx-auto">
				<div class="row justify-content-center">
				  <div id = "mostActive"> </div>
				</div>
			  </div>
			</div>
			
			<div class="row">
			<div class ="col-1"><p> </p></div>
			<div class="col-4">
				<button class="button">+</button>
			</div>
			<div class="col-7">
				<p>Select a petal to add a person to your dandelion</p>
			</div>

			</div>
		  </div>
		</div>
		  
		  <div class="carousel-item">
		  <div class="container">
			<h2 class="text-center text-uppercase text-secondary mb-0">Most Interactive</h2>
			<div class="row">
			  <div class="col-lg-8 mx-auto">
				<div class="row justify-content-center">
				  <div id = "mostInteractive"> </div>
				</div>
			  </div>
			</div>
			
			<div class="row">
			<div class ="col-1"><p> </p></div>
			<div class="col-4">
				<button class="button">+</button>
			</div>
			<div class="col-7">
				<p>Select a petal to add a person to your dandelion</p>
			</div>

			</div>
		  </div>
		  </div>
		  
		  <div class="carousel-item">
		  <div class="container">
			<h2 class="text-center text-uppercase text-secondary mb-0">In Your Area</h2>
			<div class="row">
			  <div class="col-lg-8 mx-auto">
				<div class="row justify-content-center">
				  <div id = "inYourArea"> </div>
				</div>
			  </div>
			</div>
			
			<div class="row">
			<div class ="col-1"><p> </p></div>
			<div class="col-4">
				<button class="button">+</button>
			</div>
			<div class="col-7">
				<p>Select a petal to add a person to your dandelion</p>
			</div>

			</div>
		  </div>
		</div>
	  </div>
	  <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
		<span class="carousel-control-prev-icon" aria-hidden="true"></span>
		<span class="sr-only">Previous</span>
	  </a>
	  <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
		<span class="carousel-control-next-icon" aria-hidden="true"></span>
		<span class="sr-only">Next</span>
	  </a>
	</div>
	</section>
	  
	  
	  

    <!-- Footer -->
    <footer class="footer text-center">
      <div class="container">
        <div class="row">
          <div class="col-md-4 mb-5 mb-lg-0">
            <h4 class="text-uppercase mb-4">Developed at</h4>
            <p class="lead mb-0">Wellness Technology Lab
              <br>Boston</p>
          </div>
          <div class="col-md-4 mb-5 mb-lg-0">
            <h4 class="text-uppercase mb-4">Reach us at</h4>
            <ul class="list-inline mb-0">
              <li class="list-inline-item">
                <a class="btn btn-outline-light btn-social text-center rounded-circle" href="#">
                  <i class="fa fa-fw fa-facebook"></i>
                </a>
              </li>
              <li class="list-inline-item">
                <a class="btn btn-outline-light btn-social text-center rounded-circle" href="#">
                  <i class="fa fa-fw fa-google-plus"></i>
                </a>
              </li>
              <li class="list-inline-item">
                <a class="btn btn-outline-light btn-social text-center rounded-circle" href="#">
                  <i class="fa fa-fw fa-twitter"></i>
                </a>
              </li>
              <li class="list-inline-item">
                <a class="btn btn-outline-light btn-social text-center rounded-circle" href="#">
                  <i class="fa fa-fw fa-linkedin"></i>
                </a>
              </li>
              <li class="list-inline-item">
                <a class="btn btn-outline-light btn-social text-center rounded-circle" href="#">
                  <i class="fa fa-fw fa-dribbble"></i>
                </a>
              </li>
            </ul>
          </div>
          <div class="col-md-4">
            <h4 class="text-uppercase mb-4">About Yempo</h4>
            <p class="lead mb-0">Yempo is a youth empowerment app created at
              <a href="#">Wellness Technology Lab</a>.</p>
          </div>
        </div>
      </div>
    </footer>

    <div class="copyright py-4 text-center text-white">
      <div class="container">
        <small>Copyright &copy; Yempo App 2017</small>
      </div>
    </div>

    <!-- Scroll to Top Button (Only visible on small and extra-small screen sizes) -->
    <div class="scroll-to-top d-lg-none position-fixed ">
      <a class="js-scroll-trigger d-block text-center text-white rounded" href="#page-top">
        <i class="fa fa-chevron-up"></i>
      </a>
    </div>

    

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Plugin JavaScript -->
    <script src="vendor/jquery-easing/jquery.easing.min.js"></script>
    <script src="vendor/magnific-popup/jquery.magnific-popup.min.js"></script>

    <!-- Contact Form JavaScript -->
    <script src="js/jqBootstrapValidation.js"></script>
    <script src="js/contact_me.js"></script>

    <!-- Custom scripts for this template -->
    <script src="js/freelancer.min.js"></script>

	<script>

    function toggleColor(color){
        var currentColor = color;
        return function(){
            //acquaintancesInYourArea = acquaintancesInYourArea.contains(element) ? acquaintancesInYourArea.pop(element) : acquaintancesInYourArea.push(element);
            if(currentColor != "magenta"){
                currentColor = "magenta";
                var selectedData = d3.select(this).data();
                console.log("selected");
                console.log(selectedData[0]);
                console.log(d3.select(this).color.toString());
                return d3.select(this).style("fill", currentColor);
			} else {
                var selectedData = d3.select(this).data();
                console.log(selectedData[0]);
                console.log("un-selected");
                return d3.select(this).style("fill", currentColor);
			}
        }
    };
	
	$(function(){
	$.ajax({
		type: 'GET',
		url: '/api/filters/gateway',
		success: function(data){
		var gateway = JSON.parse(data);
		
		console.log(gateway);
		
		var acquaintancesGateway = gateway.map(a => a.screen_name);
		var bridgesGateway = gateway.map(a => a.len);
		
		var friendsGateway = [];
    
    var angleGateway = 360/ (friendsGateway.length + acquaintancesGateway.length);

    var canvasGateway = d3.select("#gatewayToOutside")
        .append("svg")
        .attr("width", 360)
        .attr("height", 460);//change to dynamic

    var myCxGateway = 360/2;
    var myCyGateway = 460/2;
    var rValueGateway = 20;

    var rValueGateway1 = 75;
    var rValueGateway2 = 150;

    var friendsGatewayLines = canvasGateway.selectAll("lines")
        .data(friendsGateway)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCxGateway + Math.cos(i * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .attr("y1", function (d, i) {
            return myCyGateway + Math.sin(i * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .attr("x2", myCxGateway)
        .attr("y2", myCyGateway)
        .attr("stroke-width", 1)
        .attr("stroke", "black");

    var bridgeDashesGateway = canvasGateway.selectAll("lines")
        .data(bridgesGateway)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCxGateway + Math.cos((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .attr("y1", function (d, i) {
            return myCyGateway + Math.sin((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .attr("x2", myCxGateway)
        .attr("y2", myCyGateway)
        .style("stroke-dasharray", "5 5")
        .attr("stroke", "black");

    var bridgeToAcquaintancesDashesGateway = canvasGateway.selectAll("lines")
        .data(bridgesGateway)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCxGateway + Math.cos((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .attr("y1", function (d, i) {
            return myCyGateway + Math.sin((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .attr("x2", function (d, i) {
            return myCxGateway + Math.cos((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway2;
        })
        .attr("y2", function (d, i) {
            return myCyGateway + Math.sin((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway2;
        })
        .style("stroke-dasharray", "5 5")
        .attr("stroke", "black");

    var circle = canvasGateway.append("circle")
        .attr("cx", myCxGateway)
        .attr("cy", myCyGateway)
        .attr("r", rValueGateway)
        .style("fill", "black");

    canvasGateway.append("text")
        .text("you")
        .attr("x", myCxGateway - 15)
        .attr("y", myCyGateway)
        .style('fill', 'white');

    var friendsGatewayPetals = canvasGateway.selectAll("circles")
        .data(friendsGateway)
        .enter()
        .append("circle")
        .attr("cx", function (d, i){
            return myCxGateway + Math.cos(i * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .attr("cy", function (d, i) {
            return myCyGateway + Math.sin(i * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .attr("r", rValueGateway)
        .style("fill", "red");
		
	var friendsGatewayPetalsText = canvasGateway.selectAll("circles")
        .data(friendsGateway)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCxGateway + Math.cos(i * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .attr("y", function (d, i) {
            return myCyGateway + Math.sin(i * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .style("fill", "black");

    var acquaintancesGatewayPetals = canvasGateway.selectAll("circles")
        .data(acquaintancesGateway)
        .enter()
        .append("circle")
        .attr("cx", function (d, i) {
            return myCxGateway + Math.cos((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway2;
        })
        .attr("cy", function (d, i) {
            return myCyGateway + Math.sin((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway2;
        })
        .attr("r", rValueGateway)
        .style("fill", "royalblue")
		.on('click', toggleColor("royalblue"));
		
	var acquaintancesGatewayPetalsText = canvasGateway.selectAll("circles")
        .data(acquaintancesGateway)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCxGateway + Math.cos((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway2;
        })
        .attr("y", function (d, i) {
            return myCyGateway + Math.sin((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway2;
        })
        .style("fill", "black");


    var bridgesGatewayPetals = canvasGateway.selectAll("circles")
        .data(bridgesGateway)
        .enter()
        .append("circle")
        .attr("cx", function (d, i) {
            return myCxGateway + Math.cos((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway1;

        })
        .attr("cy", function (d, i) {
            return myCyGateway + Math.sin((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .attr("r", rValueGateway)
        .style("fill", "gray");
		
	var bridgesGatewayPetalsText = canvasGateway.selectAll("circles")
        .data(bridgesGateway)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCxGateway + Math.cos((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .attr("y", function (d, i) {
            return myCyGateway + Math.sin((friendsGateway.length + i) * Math.PI * angleGateway / 180) * rValueGateway1;
        })
        .style("fill", "black");
		
		}
	});
	});
	
	// leastFollowers
	
	$(function(){
	$.ajax({
		type: 'GET',
		url: '/api/filters/leastfollowers',
		success: function(data){
		var leastfollowers = JSON.parse(data);
		console.log("these are the least followers");
		console.log(leastfollowers);
		
		var acquaintancesleastFollowers = leastfollowers.map(a => a.screen_name);
		var bridgesleastFollowers = leastfollowers.map(a => a.followers_count);
		
		var friendsleastFollowers = [];
    
    var angleleastFollowers = 360/ (friendsleastFollowers.length + acquaintancesleastFollowers.length);

    var canvasleastFollowers = d3.select("#leastFollowers")
        .append("svg")
        .attr("width", 360)
        .attr("height", 460);//change to dynamic

    var myCxleastFollowers = 360/2;
    var myCyleastFollowers = 460/2;
    var rValueleastFollowers = 20;

    var rValueleastFollowers1 = 75;
    var rValueleastFollowers2 = 150;

    var friendsleastFollowersLines = canvasleastFollowers.selectAll("lines")
        .data(friendsleastFollowers)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCxleastFollowers + Math.cos(i * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .attr("y1", function (d, i) {
            return myCyleastFollowers + Math.sin(i * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .attr("x2", myCxleastFollowers)
        .attr("y2", myCyleastFollowers)
        .attr("stroke-width", 1)
        .attr("stroke", "black");

    var bridgeDashesleastFollowers = canvasleastFollowers.selectAll("lines")
        .data(bridgesleastFollowers)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCxleastFollowers + Math.cos((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .attr("y1", function (d, i) {
            return myCyleastFollowers + Math.sin((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .attr("x2", myCxleastFollowers)
        .attr("y2", myCyleastFollowers)
        .style("stroke-dasharray", "5 5")
        .attr("stroke", "black");

    var bridgeToAcquaintancesDashesleastFollowers = canvasleastFollowers.selectAll("lines")
        .data(bridgesleastFollowers)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCxleastFollowers + Math.cos((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .attr("y1", function (d, i) {
            return myCyleastFollowers + Math.sin((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .attr("x2", function (d, i) {
            return myCxleastFollowers + Math.cos((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers2;
        })
        .attr("y2", function (d, i) {
            return myCyleastFollowers + Math.sin((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers2;
        })
        .style("stroke-dasharray", "5 5")
        .attr("stroke", "black");
		
    canvasleastFollowers.append("text")
        .text("you")
        .attr("x", myCxleastFollowers - 15)
        .attr("y", myCyleastFollowers)
        .style('fill', 'white');

    var friendsleastFollowersPetals = canvasleastFollowers.selectAll("circles")
        .data(friendsleastFollowers)
        .enter()
        .append("circle")
        .attr("cx", function (d, i){
            return myCxleastFollowers + Math.cos(i * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .attr("cy", function (d, i) {
            return myCyleastFollowers + Math.sin(i * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .attr("r", rValueleastFollowers)
        .style("fill", "red");
		
	var friendsleastFollowersPetalsText = canvasleastFollowers.selectAll("circles")
        .data(friendsleastFollowers)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCxleastFollowers + Math.cos(i * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .attr("y", function (d, i) {
            return myCyleastFollowers + Math.sin(i * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .style("fill", "black");

    var acquaintancesleastFollowersPetals = canvasleastFollowers.selectAll("circles")
        .data(acquaintancesleastFollowers)
        .enter()
        .append("circle")
        .attr("cx", function (d, i) {
            return myCxleastFollowers + Math.cos((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers2;

        })
        .attr("cy", function (d, i) {
            return myCyleastFollowers + Math.sin((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers2;
        })
        .attr("r", rValueleastFollowers)
        .style("fill", "deepskyblue")
		.on('click', toggleColor("deepskyblue"));
		
	var acquaintancesleastFollowersPetalsText = canvasleastFollowers.selectAll("circles")
        .data(acquaintancesleastFollowers)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCxleastFollowers + Math.cos((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers2;
        })
        .attr("y", function (d, i) {
            return myCyleastFollowers + Math.sin((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers2;
        })
        .style("fill", "black");


    var bridgesleastFollowersPetals = canvasleastFollowers.selectAll("circles")
        .data(bridgesleastFollowers)
        .enter()
        .append("circle")
        .attr("cx", function (d, i) {
            return myCxleastFollowers + Math.cos((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;

        })
        .attr("cy", function (d, i) {
            return myCyleastFollowers + Math.sin((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .attr("r", rValueleastFollowers)
        .style("fill", "gray");
		
	var bridgesleastFollowersPetalsText = canvasleastFollowers.selectAll("circles")
        .data(bridgesleastFollowers)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCxleastFollowers + Math.cos((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .attr("y", function (d, i) {
            return myCyleastFollowers + Math.sin((friendsleastFollowers.length + i) * Math.PI * angleleastFollowers / 180) * rValueleastFollowers1;
        })
        .style("fill", "black");
		
		}
	});
	});
	
	// end least followers
		

		
	$(function(){
	$.ajax({
		type: 'GET',
		url: '/api/filters/mostactive',
		success: function(data){
		var followers = JSON.parse(data);
		
		var acquaintancesActive = followers.map(a => a.screen_name);
		var bridgesActive = followers.map(a => a.statuses_count);
		
		var friendsActive = [];
    
    var angleActive = 360/ (friendsActive.length + acquaintancesActive.length);

    var canvasActive = d3.select("#mostActive")
        .append("svg")
        .attr("width", 360)
        .attr("height", 460);//change to dynamic

    var myCxActive = 360/2;
    var myCyActive = 460/2;
    var rValueActive = 20;

    var rValueActive1 = 75;
    var rValueActive2 = 150;

    var friendsActiveLines = canvasActive.selectAll("lines")
        .data(friendsActive)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCxActive + Math.cos(i * Math.PI * angleActive / 180) * rValueActive1;
        })
        .attr("y1", function (d, i) {
            return myCyActive + Math.sin(i * Math.PI * angleActive / 180) * rValueActive1;
        })
        .attr("x2", myCxActive)
        .attr("y2", myCyActive)
        .attr("stroke-width", 1)
        .attr("stroke", "black");

    var bridgeDashesActive = canvasActive.selectAll("lines")
        .data(bridgesActive)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCxActive + Math.cos((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive1;
        })
        .attr("y1", function (d, i) {
            return myCyActive + Math.sin((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive1;
        })
        .attr("x2", myCxActive)
        .attr("y2", myCyActive)
        .style("stroke-dasharray", "5 5")
        .attr("stroke", "black");

    var bridgeToAcquaintancesDashesActive = canvasActive.selectAll("lines")
        .data(bridgesActive)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCxActive + Math.cos((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive1;
        })
        .attr("y1", function (d, i) {
            return myCyActive + Math.sin((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive1;
        })
        .attr("x2", function (d, i) {
            return myCxActive + Math.cos((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive2;
        })
        .attr("y2", function (d, i) {
            return myCyActive + Math.sin((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive2;
        })
        .style("stroke-dasharray", "5 5")
        .attr("stroke", "black");

    var circle = canvasActive.append("circle")
        .attr("cx", myCxActive)
        .attr("cy", myCyActive)
        .attr("r", rValueActive)
        .style("fill", "black");

    canvasActive.append("text")
        .text("you")
        .attr("x", myCxActive - 15)
        .attr("y", myCyActive)
        .style('fill', 'white');

    var friendsActivePetals = canvasActive.selectAll("circles")
        .data(friendsActive)
        .enter()
        .append("circle")
        .attr("cx", function (d, i){
            return myCxActive + Math.cos(i * Math.PI * angleActive / 180) * rValueActive1;
        })
        .attr("cy", function (d, i) {
            return myCyActive + Math.sin(i * Math.PI * angleActive / 180) * rValueActive1;
        })
        .attr("r", rValueActive)
        .style("fill", "red");
		
	var friendsActivePetalsText = canvasActive.selectAll("circles")
        .data(friendsActive)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCxActive + Math.cos(i * Math.PI * angleActive / 180) * rValueActive1;
        })
        .attr("y", function (d, i) {
            return myCyActive + Math.sin(i * Math.PI * angleActive / 180) * rValueActive1;
        })
        .style("fill", "black");

    var acquaintancesActivePetals = canvasActive.selectAll("circles")
        .data(acquaintancesActive)
        .enter()
        .append("circle")
        .attr("cx", function (d, i) {
            return myCxActive + Math.cos((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive2;

        })
        .attr("cy", function (d, i) {
            return myCyActive + Math.sin((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive2;
        })
        .attr("r", rValueActive)
        .style("fill", "orange")
        .on('click', toggleColor("orange"));
		
	var acquaintancesActivePetalsText = canvasActive.selectAll("circles")
        .data(acquaintancesActive)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCxActive + Math.cos((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive2;
        })
        .attr("y", function (d, i) {
            return myCyActive + Math.sin((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive2;
        })
        .style("fill", "black");


    var bridgesActivePetals = canvasActive.selectAll("circles")
        .data(bridgesActive)
        .enter()
        .append("circle")
        .attr("cx", function (d, i) {
            return myCxActive + Math.cos((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive1;

        })
        .attr("cy", function (d, i) {
            return myCyActive + Math.sin((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive1;
        })
        .attr("r", rValueActive)
        .style("fill", "gray");
		
	var bridgesActivePetalsText = canvasActive.selectAll("circles")
        .data(bridgesActive)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCxActive + Math.cos((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive1;
        })
        .attr("y", function (d, i) {
            return myCyActive + Math.sin((friendsActive.length + i) * Math.PI * angleActive / 180) * rValueActive1;
        })
        .style("fill", "black");
		
		}});
		});
		
		$(function(){
		$.ajax({
		type: 'GET',
		url: '/api/filters/mostinteractive',
		success: function(data){
		var followers = JSON.parse(data);
		
		var acquaintancesInteractive = followers.map(a => a.screen_name);
		var bridgesInteractive = followers.map(a => a.favourites_count);
		
		var friendsInteractive = [];
    
    var angleInteractive = 360/ (friendsInteractive.length + acquaintancesInteractive.length);

    var canvasInteractive = d3.select("#mostInteractive")
        .append("svg")
        .attr("width", 360)
        .attr("height", 460);//change to dynamic

    var myCxInteractive = 360/2;
    var myCyInteractive = 460/2;
    var rValueInteractive = 20;

    var rValueInteractive1 = 75;
    var rValueInteractive2 = 150;

    var friendsInteractiveLines = canvasInteractive.selectAll("lines")
        .data(friendsInteractive)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCxInteractive + Math.cos(i * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .attr("y1", function (d, i) {
            return myCyInteractive + Math.sin(i * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .attr("x2", myCxInteractive)
        .attr("y2", myCyInteractive)
        .attr("stroke-width", 1)
        .attr("stroke", "black");

    var bridgeDashesInteractive = canvasInteractive.selectAll("lines")
        .data(bridgesInteractive)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCxInteractive + Math.cos((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .attr("y1", function (d, i) {
            return myCyInteractive + Math.sin((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .attr("x2", myCxInteractive)
        .attr("y2", myCyInteractive)
        .style("stroke-dasharray", "5 5")
        .attr("stroke", "black");

    var bridgeToAcquaintancesDashesInteractive = canvasInteractive.selectAll("lines")
        .data(bridgesInteractive)
        .enter()
        .append("line")
        .attr("x1", function (d, i) {
            return myCxInteractive + Math.cos((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .attr("y1", function (d, i) {
            return myCyInteractive + Math.sin((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .attr("x2", function (d, i) {
            return myCxInteractive + Math.cos((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive2;
        })
        .attr("y2", function (d, i) {
            return myCyInteractive + Math.sin((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive2;
        })
        .style("stroke-dasharray", "5 5")
        .attr("stroke", "black");

    var circle = canvasInteractive.append("circle")
        .attr("cx", myCxInteractive)
        .attr("cy", myCyInteractive)
        .attr("r", rValueInteractive)
        .style("fill", "black");

    canvasInteractive.append("text")
        .text("you")
        .attr("x", myCxInteractive - 15)
        .attr("y", myCyInteractive)
        .style('fill', 'white');

    var friendsInteractivePetals = canvasInteractive.selectAll("circles")
        .data(friendsInteractive)
        .enter()
        .append("circle")
        .attr("cx", function (d, i){
            return myCxInteractive + Math.cos(i * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .attr("cy", function (d, i) {
            return myCyInteractive + Math.sin(i * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .attr("r", rValueInteractive)
        .style("fill", "red");
		
	var friendsInteractivePetalsText = canvasInteractive.selectAll("circles")
        .data(friendsInteractive)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCxInteractive + Math.cos(i * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .attr("y", function (d, i) {
            return myCyInteractive + Math.sin(i * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .style("fill", "black");

    var acquaintancesInteractivePetals = canvasInteractive.selectAll("circles")
        .data(acquaintancesInteractive)
        .enter()
        .append("circle")
        .attr("cx", function (d, i) {
            return myCxInteractive + Math.cos((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive2;

        })
        .attr("cy", function (d, i) {
            return myCyInteractive + Math.sin((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive2;
        })
        .attr("r", rValueInteractive)
        .style("fill", "forestgreen")
        .on('click', toggleColor("forestgreen"));
		
	var acquaintancesInteractivePetalsText = canvasInteractive.selectAll("circles")
        .data(acquaintancesInteractive)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCxInteractive + Math.cos((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive2;
        })
        .attr("y", function (d, i) {
            return myCyInteractive + Math.sin((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive2;
        })
        .style("fill", "black");

    var bridgesInteractivePetals = canvasInteractive.selectAll("circles")
        .data(bridgesInteractive)
        .enter()
        .append("circle")
        .attr("cx", function (d, i) {
            return myCxInteractive + Math.cos((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive1;

        })
        .attr("cy", function (d, i) {
            return myCyInteractive + Math.sin((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .attr("r", rValueInteractive)
        .style("fill", "gray");
		
	var bridgesInteractivePetalsText = canvasInteractive.selectAll("circles")
        .data(bridgesInteractive)
        .enter()
		.append("text")
        .text(function(d) { return d; })
        .attr("x", function (d, i){
            return myCxInteractive + Math.cos((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .attr("y", function (d, i) {
            return myCyInteractive + Math.sin((friendsInteractive.length + i) * Math.PI * angleInteractive / 180) * rValueInteractive1;
        })
        .style("fill", "black");
		
		}});
		});

    //setTimeout(InYourArea, 1000);

    function InYourArea(acquaintancesInYourArea,bridgesInYourArea,friendsInYourArea) {
        //console.log(acquaintancesInYourArea);
        //console.log(bridgesInYourArea);
        var angleInYourArea = 360 / (friendsInYourArea.length + acquaintancesInYourArea.length);

        var inYourArea = d3.select("#inYourArea");
        var insideSVG = inYourArea.select("svg");
        insideSVG.remove();

        var canvasInYourArea = d3.select("#inYourArea")
            .append("svg")
            .attr("width", 360)
            .attr("height", 460);//change to dynamic

        var myCxInYourArea = 360 / 2;
        var myCyInYourArea = 460 / 2;
        var rValueInYourArea = 20;

        var rValueInYourArea1 = 75;
        var rValueInYourArea2 = 150;

        var friendsInYourAreaLines = canvasInYourArea.selectAll("lines")
            .data(acquaintancesInYourArea)
            .enter()
            .append("line")
            .attr("x1", function (d, i) {
                return myCxInYourArea + Math.cos(i * Math.PI * angleInYourArea / 180) * rValueInYourArea1;
            })
            .attr("y1", function (d, i) {
                return myCyInYourArea + Math.sin(i * Math.PI * angleInYourArea / 180) * rValueInYourArea1;
            })
            .attr("x2", myCxInYourArea)
            .attr("y2", myCyInYourArea)
            .attr("stroke-width", 1)
            .attr("stroke", "black");

        var bridgeDashesInYourArea = canvasInYourArea.selectAll("lines")
            .data(acquaintancesInYourArea)
            .enter()
            .append("line")
            .attr("x1", function (d, i) {
                return myCxInYourArea + Math.cos((friendsInYourArea.length + i) * Math.PI * angleInYourArea / 180) * rValueInYourArea1;
            })
            .attr("y1", function (d, i) {
                return myCyInYourArea + Math.sin((friendsInYourArea.length + i) * Math.PI * angleInYourArea / 180) * rValueInYourArea1;
            })
            .attr("x2", myCxInYourArea)
            .attr("y2", myCyInYourArea)
            .style("stroke-dasharray", "5 5")
            .attr("stroke", "black");

        var bridgeToacquaintancesInYourAreaDashes = canvasInYourArea.selectAll("lines")
            .data(acquaintancesInYourArea)
            .enter()
            .append("line")
            .attr("x1", function (d, i) {
                return myCxInYourArea + Math.cos((friendsInYourArea.length + i) * Math.PI * angleInYourArea / 180) * rValueInYourArea1;
            })
            .attr("y1", function (d, i) {
                return myCyInYourArea + Math.sin((friendsInYourArea.length + i) * Math.PI * angleInYourArea / 180) * rValueInYourArea1;
            })
            .attr("x2", function (d, i) {
                return myCxInYourArea + Math.cos((friendsInYourArea.length + i) * Math.PI * angleInYourArea / 180) * rValueInYourArea2;
            })
            .attr("y2", function (d, i) {
                return myCyInYourArea + Math.sin((friendsInYourArea.length + i) * Math.PI * angleInYourArea / 180) * rValueInYourArea2;
            })
            .style("stroke-dasharray", "5 5")
            .attr("stroke", "black");

        var circle = canvasInYourArea.append("circle")
            .attr("cx", myCxInYourArea)
            .attr("cy", myCyInYourArea)
            .attr("r", rValueInYourArea)
            .style("fill", "black");

        canvasInYourArea.append("text")
            .text("you")
            .attr("x", myCxInYourArea - 15)
            .attr("y", myCyInYourArea)
            .style('fill', 'white');

        var friendsInYourAreaPetals = canvasInYourArea.selectAll("circles")
            .data(friendsInYourArea)
            .enter()
            .append("circle")
            .attr("cx", function (d, i) {
                return myCxInYourArea + Math.cos(i * Math.PI * angleInYourArea / 180) * rValueInYourArea1;
            })
            .attr("cy", function (d, i) {
                return myCyInYourArea + Math.sin(i * Math.PI * angleInYourArea / 180) * rValueInYourArea1;
            })
            .attr("r", rValueInYourArea)
            .style("fill", "red")
            .append("text")
            .text("you")
            .attr("x", function (d, i) {
                return myCxInYourArea + Math.cos(i * Math.PI * angleInYourArea / 180) * rValueInYourArea1;
            } - 15)
            .attr("y", function (d, i) {
                return myCyInYourArea + Math.sin(i * Math.PI * angleInYourArea / 180) * rValueInYourArea1;
            });


        var acquaintancesInYourAreaPetals = canvasInYourArea.selectAll("circles")
            .data(acquaintancesInYourArea)
            .enter()
            .append("circle")
            .attr("cx", function (d, i) {
                return myCxInYourArea + Math.cos((friendsInYourArea.length + i) * Math.PI * angleInYourArea / 180) * rValueInYourArea2;

            })
            .attr("cy", function (d, i) {
                return myCyInYourArea + Math.sin((friendsInYourArea.length + i) * Math.PI * angleInYourArea / 180) * rValueInYourArea2;
            })
            .attr("r", rValueInYourArea)
            .style("fill", "red");

        var acquaintancesInYourAreaPetalsText = canvasInYourArea.selectAll("circles")
            .data(acquaintancesInYourArea)
            .enter()
            .append("text")
            .text(function(d) { return d; })
            .attr("x", function (d, i){
                return myCxInYourArea + Math.cos((friendsInYourArea.length + i) * Math.PI * angleInYourArea / 180) * rValueInYourArea2;
            })
            .attr("y", function (d, i) {
                return myCyInYourArea + Math.sin((friendsInYourArea.length + i) * Math.PI * angleInYourArea / 180) * rValueInYourArea2;
            })
            .style("fill", "black");

        var bridgesInYourAreaPetals = canvasInYourArea.selectAll("circles")
            .data(bridgesInYourArea)
            .enter()
            .append("circle")
            .attr("cx", function (d, i) {
                return myCxInYourArea + Math.cos((friendsInYourArea.length + i) * Math.PI * angleInYourArea / 180) * rValueInYourArea1;
            })
            .attr("cy", function (d, i) {
                return myCyInYourArea + Math.sin((friendsInYourArea.length + i) * Math.PI * angleInYourArea / 180) * rValueInYourArea1;
            })
            .attr("r", rValueInYourArea)
            .style("fill", "gray");
    }
		
</script>
	
  </body>

</html>
